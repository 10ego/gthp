// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type OrgType string

const (
	OrgTypeDivision    OrgType = "Division"
	OrgTypeBureau      OrgType = "Bureau"
	OrgTypeDirectorate OrgType = "Directorate"
	OrgTypeBranch      OrgType = "Branch"
)

func (e *OrgType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OrgType(s)
	case string:
		*e = OrgType(s)
	default:
		return fmt.Errorf("unsupported scan type for OrgType: %T", src)
	}
	return nil
}

type NullOrgType struct {
	OrgType OrgType
	Valid   bool // Valid is true if OrgType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOrgType) Scan(value interface{}) error {
	if value == nil {
		ns.OrgType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OrgType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOrgType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.OrgType), nil
}

type StaffStatus string

const (
	StaffStatusActive         StaffStatus = "Active"
	StaffStatusOnAssignment   StaffStatus = "On Assignment"
	StaffStatusLeaveofAbsence StaffStatus = "Leave of Absence"
	StaffStatusInactive       StaffStatus = "Inactive"
)

func (e *StaffStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = StaffStatus(s)
	case string:
		*e = StaffStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for StaffStatus: %T", src)
	}
	return nil
}

type NullStaffStatus struct {
	StaffStatus StaffStatus
	Valid       bool // Valid is true if StaffStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullStaffStatus) Scan(value interface{}) error {
	if value == nil {
		ns.StaffStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.StaffStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullStaffStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.StaffStatus), nil
}

type Organization struct {
	ID       string
	Name     string
	Type     OrgType
	ParentID sql.NullString
}

type User struct {
	ID            string
	Uid           string
	Name          string
	JobTitle      string
	Office        string
	Organizations string
	Status        StaffStatus
	Telephone     sql.NullString
}
